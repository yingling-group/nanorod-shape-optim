Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\filter.py", line 218, in _fit_resample
    nns = self.nn_k_.kneighbors(
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 202, in _fit_resample
    nns = self.nn_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\filter.py", line 218, in _fit_resample
    nns = self.nn_k_.kneighbors(
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 183, in _fit_resample
    raise RuntimeError(
RuntimeError: Not any neigbours belong to the majority class. This case will induce a NaN case with a division by zero. ADASYN is not suited for this specific dataset. Use SMOTE instead.
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 202, in _fit_resample
    nns = self.nn_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\filter.py", line 218, in _fit_resample
    nns = self.nn_k_.kneighbors(
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 202, in _fit_resample
    nns = self.nn_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 202, in _fit_resample
    nns = self.nn_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\base.py", line 355, in _fit_resample
    nns = self.nn_k_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 202, in _fit_resample
    nns = self.nn_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 202, in _fit_resample
    nns = self.nn_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 202, in _fit_resample
    nns = self.nn_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 183, in _fit_resample
    raise RuntimeError(
RuntimeError: Not any neigbours belong to the majority class. This case will induce a NaN case with a division by zero. ADASYN is not suited for this specific dataset. Use SMOTE instead.
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\filter.py", line 218, in _fit_resample
    nns = self.nn_k_.kneighbors(
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 183, in _fit_resample
    raise RuntimeError(
RuntimeError: Not any neigbours belong to the majority class. This case will induce a NaN case with a division by zero. ADASYN is not suited for this specific dataset. Use SMOTE instead.
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\base.py", line 355, in _fit_resample
    nns = self.nn_k_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 183, in _fit_resample
    raise RuntimeError(
RuntimeError: Not any neigbours belong to the majority class. This case will induce a NaN case with a division by zero. ADASYN is not suited for this specific dataset. Use SMOTE instead.
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 183, in _fit_resample
    raise RuntimeError(
RuntimeError: Not any neigbours belong to the majority class. This case will induce a NaN case with a division by zero. ADASYN is not suited for this specific dataset. Use SMOTE instead.
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\base.py", line 355, in _fit_resample
    nns = self.nn_k_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 202, in _fit_resample
    nns = self.nn_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\base.py", line 355, in _fit_resample
    nns = self.nn_k_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\base.py", line 355, in _fit_resample
    nns = self.nn_k_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\base.py", line 355, in _fit_resample
    nns = self.nn_k_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 202, in _fit_resample
    nns = self.nn_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 202, in _fit_resample
    nns = self.nn_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\base.py", line 355, in _fit_resample
    nns = self.nn_k_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\filter.py", line 218, in _fit_resample
    nns = self.nn_k_.kneighbors(
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\base.py", line 355, in _fit_resample
    nns = self.nn_k_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 183, in _fit_resample
    raise RuntimeError(
RuntimeError: Not any neigbours belong to the majority class. This case will induce a NaN case with a division by zero. ADASYN is not suited for this specific dataset. Use SMOTE instead.
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 183, in _fit_resample
    raise RuntimeError(
RuntimeError: Not any neigbours belong to the majority class. This case will induce a NaN case with a division by zero. ADASYN is not suited for this specific dataset. Use SMOTE instead.
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 202, in _fit_resample
    nns = self.nn_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\filter.py", line 218, in _fit_resample
    nns = self.nn_k_.kneighbors(
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\filter.py", line 218, in _fit_resample
    nns = self.nn_k_.kneighbors(
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\base.py", line 355, in _fit_resample
    nns = self.nn_k_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 183, in _fit_resample
    raise RuntimeError(
RuntimeError: Not any neigbours belong to the majority class. This case will induce a NaN case with a division by zero. ADASYN is not suited for this specific dataset. Use SMOTE instead.
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\base.py", line 355, in _fit_resample
    nns = self.nn_k_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\filter.py", line 218, in _fit_resample
    nns = self.nn_k_.kneighbors(
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 183, in _fit_resample
    raise RuntimeError(
RuntimeError: Not any neigbours belong to the majority class. This case will induce a NaN case with a division by zero. ADASYN is not suited for this specific dataset. Use SMOTE instead.
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\base.py", line 355, in _fit_resample
    nns = self.nn_k_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\filter.py", line 218, in _fit_resample
    nns = self.nn_k_.kneighbors(
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\base.py", line 355, in _fit_resample
    nns = self.nn_k_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\base.py", line 355, in _fit_resample
    nns = self.nn_k_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\base.py", line 355, in _fit_resample
    nns = self.nn_k_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 202, in _fit_resample
    nns = self.nn_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 183, in _fit_resample
    raise RuntimeError(
RuntimeError: Not any neigbours belong to the majority class. This case will induce a NaN case with a division by zero. ADASYN is not suited for this specific dataset. Use SMOTE instead.
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\base.py", line 355, in _fit_resample
    nns = self.nn_k_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\filter.py", line 218, in _fit_resample
    nns = self.nn_k_.kneighbors(
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 183, in _fit_resample
    raise RuntimeError(
RuntimeError: Not any neigbours belong to the majority class. This case will induce a NaN case with a division by zero. ADASYN is not suited for this specific dataset. Use SMOTE instead.
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\base.py", line 355, in _fit_resample
    nns = self.nn_k_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\base.py", line 355, in _fit_resample
    nns = self.nn_k_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 183, in _fit_resample
    raise RuntimeError(
RuntimeError: Not any neigbours belong to the majority class. This case will induce a NaN case with a division by zero. ADASYN is not suited for this specific dataset. Use SMOTE instead.
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\base.py", line 355, in _fit_resample
    nns = self.nn_k_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 202, in _fit_resample
    nns = self.nn_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\base.py", line 355, in _fit_resample
    nns = self.nn_k_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 202, in _fit_resample
    nns = self.nn_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\base.py", line 355, in _fit_resample
    nns = self.nn_k_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 183, in _fit_resample
    raise RuntimeError(
RuntimeError: Not any neigbours belong to the majority class. This case will induce a NaN case with a division by zero. ADASYN is not suited for this specific dataset. Use SMOTE instead.
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\base.py", line 355, in _fit_resample
    nns = self.nn_k_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\base.py", line 355, in _fit_resample
    nns = self.nn_k_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\base.py", line 355, in _fit_resample
    nns = self.nn_k_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\filter.py", line 218, in _fit_resample
    nns = self.nn_k_.kneighbors(
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\base.py", line 355, in _fit_resample
    nns = self.nn_k_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 202, in _fit_resample
    nns = self.nn_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\base.py", line 355, in _fit_resample
    nns = self.nn_k_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\base.py", line 355, in _fit_resample
    nns = self.nn_k_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 202, in _fit_resample
    nns = self.nn_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\filter.py", line 218, in _fit_resample
    nns = self.nn_k_.kneighbors(
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\filter.py", line 218, in _fit_resample
    nns = self.nn_k_.kneighbors(
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\filter.py", line 218, in _fit_resample
    nns = self.nn_k_.kneighbors(
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\filter.py", line 218, in _fit_resample
    nns = self.nn_k_.kneighbors(
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 202, in _fit_resample
    nns = self.nn_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\filter.py", line 218, in _fit_resample
    nns = self.nn_k_.kneighbors(
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 183, in _fit_resample
    raise RuntimeError(
RuntimeError: Not any neigbours belong to the majority class. This case will induce a NaN case with a division by zero. ADASYN is not suited for this specific dataset. Use SMOTE instead.
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\base.py", line 355, in _fit_resample
    nns = self.nn_k_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 183, in _fit_resample
    raise RuntimeError(
RuntimeError: Not any neigbours belong to the majority class. This case will induce a NaN case with a division by zero. ADASYN is not suited for this specific dataset. Use SMOTE instead.
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\filter.py", line 218, in _fit_resample
    nns = self.nn_k_.kneighbors(
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\base.py", line 355, in _fit_resample
    nns = self.nn_k_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 202, in _fit_resample
    nns = self.nn_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 183, in _fit_resample
    raise RuntimeError(
RuntimeError: Not any neigbours belong to the majority class. This case will induce a NaN case with a division by zero. ADASYN is not suited for this specific dataset. Use SMOTE instead.
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\filter.py", line 218, in _fit_resample
    nns = self.nn_k_.kneighbors(
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\base.py", line 355, in _fit_resample
    nns = self.nn_k_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\filter.py", line 218, in _fit_resample
    nns = self.nn_k_.kneighbors(
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdCommon.py", line 63, in Process
    self.model.fit(X, y)
  File "C:\Miniconda3\lib\site-packages\xgboost\core.py", line 532, in inner_f
    return f(**kwargs)
  File "C:\Miniconda3\lib\site-packages\xgboost\sklearn.py", line 1357, in fit
    raise ValueError(
ValueError: Invalid classes inferred from unique values of `y`.  Expected: [0 1], got [0 2]
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 183, in _fit_resample
    raise RuntimeError(
RuntimeError: Not any neigbours belong to the majority class. This case will induce a NaN case with a division by zero. ADASYN is not suited for this specific dataset. Use SMOTE instead.
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\filter.py", line 218, in _fit_resample
    nns = self.nn_k_.kneighbors(
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 202, in _fit_resample
    nns = self.nn_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 202, in _fit_resample
    nns = self.nn_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 183, in _fit_resample
    raise RuntimeError(
RuntimeError: Not any neigbours belong to the majority class. This case will induce a NaN case with a division by zero. ADASYN is not suited for this specific dataset. Use SMOTE instead.
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 183, in _fit_resample
    raise RuntimeError(
RuntimeError: Not any neigbours belong to the majority class. This case will induce a NaN case with a division by zero. ADASYN is not suited for this specific dataset. Use SMOTE instead.
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\base.py", line 355, in _fit_resample
    nns = self.nn_k_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\filter.py", line 218, in _fit_resample
    nns = self.nn_k_.kneighbors(
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 183, in _fit_resample
    raise RuntimeError(
RuntimeError: Not any neigbours belong to the majority class. This case will induce a NaN case with a division by zero. ADASYN is not suited for this specific dataset. Use SMOTE instead.
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\filter.py", line 218, in _fit_resample
    nns = self.nn_k_.kneighbors(
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\base.py", line 355, in _fit_resample
    nns = self.nn_k_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\filter.py", line 218, in _fit_resample
    nns = self.nn_k_.kneighbors(
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 183, in _fit_resample
    raise RuntimeError(
RuntimeError: Not any neigbours belong to the majority class. This case will induce a NaN case with a division by zero. ADASYN is not suited for this specific dataset. Use SMOTE instead.
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\filter.py", line 218, in _fit_resample
    nns = self.nn_k_.kneighbors(
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 183, in _fit_resample
    raise RuntimeError(
RuntimeError: Not any neigbours belong to the majority class. This case will induce a NaN case with a division by zero. ADASYN is not suited for this specific dataset. Use SMOTE instead.
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 183, in _fit_resample
    raise RuntimeError(
RuntimeError: Not any neigbours belong to the majority class. This case will induce a NaN case with a division by zero. ADASYN is not suited for this specific dataset. Use SMOTE instead.
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\base.py", line 355, in _fit_resample
    nns = self.nn_k_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 183, in _fit_resample
    raise RuntimeError(
RuntimeError: Not any neigbours belong to the majority class. This case will induce a NaN case with a division by zero. ADASYN is not suited for this specific dataset. Use SMOTE instead.
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\filter.py", line 218, in _fit_resample
    nns = self.nn_k_.kneighbors(
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 202, in _fit_resample
    nns = self.nn_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\base.py", line 355, in _fit_resample
    nns = self.nn_k_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\base.py", line 355, in _fit_resample
    nns = self.nn_k_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 183, in _fit_resample
    raise RuntimeError(
RuntimeError: Not any neigbours belong to the majority class. This case will induce a NaN case with a division by zero. ADASYN is not suited for this specific dataset. Use SMOTE instead.
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 183, in _fit_resample
    raise RuntimeError(
RuntimeError: Not any neigbours belong to the majority class. This case will induce a NaN case with a division by zero. ADASYN is not suited for this specific dataset. Use SMOTE instead.
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 183, in _fit_resample
    raise RuntimeError(
RuntimeError: Not any neigbours belong to the majority class. This case will induce a NaN case with a division by zero. ADASYN is not suited for this specific dataset. Use SMOTE instead.
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 202, in _fit_resample
    nns = self.nn_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 183, in _fit_resample
    raise RuntimeError(
RuntimeError: Not any neigbours belong to the majority class. This case will induce a NaN case with a division by zero. ADASYN is not suited for this specific dataset. Use SMOTE instead.
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 202, in _fit_resample
    nns = self.nn_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\base.py", line 355, in _fit_resample
    nns = self.nn_k_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 202, in _fit_resample
    nns = self.nn_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\filter.py", line 218, in _fit_resample
    nns = self.nn_k_.kneighbors(
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 202, in _fit_resample
    nns = self.nn_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\base.py", line 355, in _fit_resample
    nns = self.nn_k_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\base.py", line 355, in _fit_resample
    nns = self.nn_k_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\filter.py", line 218, in _fit_resample
    nns = self.nn_k_.kneighbors(
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 183, in _fit_resample
    raise RuntimeError(
RuntimeError: Not any neigbours belong to the majority class. This case will induce a NaN case with a division by zero. ADASYN is not suited for this specific dataset. Use SMOTE instead.
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\base.py", line 355, in _fit_resample
    nns = self.nn_k_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 202, in _fit_resample
    nns = self.nn_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 183, in _fit_resample
    raise RuntimeError(
RuntimeError: Not any neigbours belong to the majority class. This case will induce a NaN case with a division by zero. ADASYN is not suited for this specific dataset. Use SMOTE instead.
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 183, in _fit_resample
    raise RuntimeError(
RuntimeError: Not any neigbours belong to the majority class. This case will induce a NaN case with a division by zero. ADASYN is not suited for this specific dataset. Use SMOTE instead.
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\filter.py", line 218, in _fit_resample
    nns = self.nn_k_.kneighbors(
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\filter.py", line 218, in _fit_resample
    nns = self.nn_k_.kneighbors(
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\base.py", line 355, in _fit_resample
    nns = self.nn_k_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\filter.py", line 218, in _fit_resample
    nns = self.nn_k_.kneighbors(
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 202, in _fit_resample
    nns = self.nn_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 183, in _fit_resample
    raise RuntimeError(
RuntimeError: Not any neigbours belong to the majority class. This case will induce a NaN case with a division by zero. ADASYN is not suited for this specific dataset. Use SMOTE instead.
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\filter.py", line 218, in _fit_resample
    nns = self.nn_k_.kneighbors(
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 183, in _fit_resample
    raise RuntimeError(
RuntimeError: Not any neigbours belong to the majority class. This case will induce a NaN case with a division by zero. ADASYN is not suited for this specific dataset. Use SMOTE instead.
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\base.py", line 355, in _fit_resample
    nns = self.nn_k_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\filter.py", line 218, in _fit_resample
    nns = self.nn_k_.kneighbors(
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 202, in _fit_resample
    nns = self.nn_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\base.py", line 355, in _fit_resample
    nns = self.nn_k_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\filter.py", line 218, in _fit_resample
    nns = self.nn_k_.kneighbors(
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\filter.py", line 218, in _fit_resample
    nns = self.nn_k_.kneighbors(
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\base.py", line 355, in _fit_resample
    nns = self.nn_k_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\filter.py", line 218, in _fit_resample
    nns = self.nn_k_.kneighbors(
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 202, in _fit_resample
    nns = self.nn_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\filter.py", line 218, in _fit_resample
    nns = self.nn_k_.kneighbors(
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\filter.py", line 218, in _fit_resample
    nns = self.nn_k_.kneighbors(
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 183, in _fit_resample
    raise RuntimeError(
RuntimeError: Not any neigbours belong to the majority class. This case will induce a NaN case with a division by zero. ADASYN is not suited for this specific dataset. Use SMOTE instead.
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\base.py", line 355, in _fit_resample
    nns = self.nn_k_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 202, in _fit_resample
    nns = self.nn_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 202, in _fit_resample
    nns = self.nn_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 183, in _fit_resample
    raise RuntimeError(
RuntimeError: Not any neigbours belong to the majority class. This case will induce a NaN case with a division by zero. ADASYN is not suited for this specific dataset. Use SMOTE instead.
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 183, in _fit_resample
    raise RuntimeError(
RuntimeError: Not any neigbours belong to the majority class. This case will induce a NaN case with a division by zero. ADASYN is not suited for this specific dataset. Use SMOTE instead.
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 183, in _fit_resample
    raise RuntimeError(
RuntimeError: Not any neigbours belong to the majority class. This case will induce a NaN case with a division by zero. ADASYN is not suited for this specific dataset. Use SMOTE instead.
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 202, in _fit_resample
    nns = self.nn_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\base.py", line 355, in _fit_resample
    nns = self.nn_k_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 183, in _fit_resample
    raise RuntimeError(
RuntimeError: Not any neigbours belong to the majority class. This case will induce a NaN case with a division by zero. ADASYN is not suited for this specific dataset. Use SMOTE instead.
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\base.py", line 355, in _fit_resample
    nns = self.nn_k_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 183, in _fit_resample
    raise RuntimeError(
RuntimeError: Not any neigbours belong to the majority class. This case will induce a NaN case with a division by zero. ADASYN is not suited for this specific dataset. Use SMOTE instead.
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 202, in _fit_resample
    nns = self.nn_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 183, in _fit_resample
    raise RuntimeError(
RuntimeError: Not any neigbours belong to the majority class. This case will induce a NaN case with a division by zero. ADASYN is not suited for this specific dataset. Use SMOTE instead.
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\filter.py", line 218, in _fit_resample
    nns = self.nn_k_.kneighbors(
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdCommon.py", line 63, in Process
    self.model.fit(X, y)
  File "C:\Miniconda3\lib\site-packages\xgboost\core.py", line 532, in inner_f
    return f(**kwargs)
  File "C:\Miniconda3\lib\site-packages\xgboost\sklearn.py", line 1400, in fit
    self._Booster = train(
  File "C:\Miniconda3\lib\site-packages\xgboost\core.py", line 532, in inner_f
    return f(**kwargs)
  File "C:\Miniconda3\lib\site-packages\xgboost\training.py", line 181, in train
    bst.update(dtrain, i, obj)
  File "C:\Miniconda3\lib\site-packages\xgboost\core.py", line 1733, in update
    _check_call(_LIB.XGBoosterUpdateOneIter(self.handle,
  File "C:\Miniconda3\lib\site-packages\xgboost\core.py", line 203, in _check_call
    raise XGBoostError(py_str(_LIB.XGBGetLastError()))
xgboost.core.XGBoostError: value 0 for Parameter num_class should be greater equal to 1
num_class: Number of output class in the multi-class classification.
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\base.py", line 355, in _fit_resample
    nns = self.nn_k_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 202, in _fit_resample
    nns = self.nn_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\base.py", line 355, in _fit_resample
    nns = self.nn_k_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 183, in _fit_resample
    raise RuntimeError(
RuntimeError: Not any neigbours belong to the majority class. This case will induce a NaN case with a division by zero. ADASYN is not suited for this specific dataset. Use SMOTE instead.
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 183, in _fit_resample
    raise RuntimeError(
RuntimeError: Not any neigbours belong to the majority class. This case will induce a NaN case with a division by zero. ADASYN is not suited for this specific dataset. Use SMOTE instead.
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 202, in _fit_resample
    nns = self.nn_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 202, in _fit_resample
    nns = self.nn_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 202, in _fit_resample
    nns = self.nn_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 183, in _fit_resample
    raise RuntimeError(
RuntimeError: Not any neigbours belong to the majority class. This case will induce a NaN case with a division by zero. ADASYN is not suited for this specific dataset. Use SMOTE instead.
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\filter.py", line 218, in _fit_resample
    nns = self.nn_k_.kneighbors(
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 202, in _fit_resample
    nns = self.nn_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\filter.py", line 218, in _fit_resample
    nns = self.nn_k_.kneighbors(
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\base.py", line 355, in _fit_resample
    nns = self.nn_k_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\base.py", line 355, in _fit_resample
    nns = self.nn_k_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 202, in _fit_resample
    nns = self.nn_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 202, in _fit_resample
    nns = self.nn_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\base.py", line 355, in _fit_resample
    nns = self.nn_k_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 183, in _fit_resample
    raise RuntimeError(
RuntimeError: Not any neigbours belong to the majority class. This case will induce a NaN case with a division by zero. ADASYN is not suited for this specific dataset. Use SMOTE instead.
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\filter.py", line 218, in _fit_resample
    nns = self.nn_k_.kneighbors(
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 202, in _fit_resample
    nns = self.nn_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 183, in _fit_resample
    raise RuntimeError(
RuntimeError: Not any neigbours belong to the majority class. This case will induce a NaN case with a division by zero. ADASYN is not suited for this specific dataset. Use SMOTE instead.
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 183, in _fit_resample
    raise RuntimeError(
RuntimeError: Not any neigbours belong to the majority class. This case will induce a NaN case with a division by zero. ADASYN is not suited for this specific dataset. Use SMOTE instead.
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 202, in _fit_resample
    nns = self.nn_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\base.py", line 355, in _fit_resample
    nns = self.nn_k_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 202, in _fit_resample
    nns = self.nn_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 202, in _fit_resample
    nns = self.nn_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 183, in _fit_resample
    raise RuntimeError(
RuntimeError: Not any neigbours belong to the majority class. This case will induce a NaN case with a division by zero. ADASYN is not suited for this specific dataset. Use SMOTE instead.
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 183, in _fit_resample
    raise RuntimeError(
RuntimeError: Not any neigbours belong to the majority class. This case will induce a NaN case with a division by zero. ADASYN is not suited for this specific dataset. Use SMOTE instead.
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 183, in _fit_resample
    raise RuntimeError(
RuntimeError: Not any neigbours belong to the majority class. This case will induce a NaN case with a division by zero. ADASYN is not suited for this specific dataset. Use SMOTE instead.
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 183, in _fit_resample
    raise RuntimeError(
RuntimeError: Not any neigbours belong to the majority class. This case will induce a NaN case with a division by zero. ADASYN is not suited for this specific dataset. Use SMOTE instead.
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 202, in _fit_resample
    nns = self.nn_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\base.py", line 355, in _fit_resample
    nns = self.nn_k_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 202, in _fit_resample
    nns = self.nn_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdCommon.py", line 63, in Process
    self.model.fit(X, y)
  File "C:\Miniconda3\lib\site-packages\xgboost\core.py", line 532, in inner_f
    return f(**kwargs)
  File "C:\Miniconda3\lib\site-packages\xgboost\sklearn.py", line 1357, in fit
    raise ValueError(
ValueError: Invalid classes inferred from unique values of `y`.  Expected: [0 1], got [0 2]
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\filter.py", line 218, in _fit_resample
    nns = self.nn_k_.kneighbors(
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\base.py", line 355, in _fit_resample
    nns = self.nn_k_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 183, in _fit_resample
    raise RuntimeError(
RuntimeError: Not any neigbours belong to the majority class. This case will induce a NaN case with a division by zero. ADASYN is not suited for this specific dataset. Use SMOTE instead.
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdCommon.py", line 63, in Process
    self.model.fit(X, y)
  File "C:\Miniconda3\lib\site-packages\sklearn\svm\_base.py", line 201, in fit
    y = self._validate_targets(y)
  File "C:\Miniconda3\lib\site-packages\sklearn\svm\_base.py", line 749, in _validate_targets
    raise ValueError(
ValueError: The number of classes has to be greater than one; got 1 class
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 183, in _fit_resample
    raise RuntimeError(
RuntimeError: Not any neigbours belong to the majority class. This case will induce a NaN case with a division by zero. ADASYN is not suited for this specific dataset. Use SMOTE instead.
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\filter.py", line 218, in _fit_resample
    nns = self.nn_k_.kneighbors(
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\filter.py", line 218, in _fit_resample
    nns = self.nn_k_.kneighbors(
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 183, in _fit_resample
    raise RuntimeError(
RuntimeError: Not any neigbours belong to the majority class. This case will induce a NaN case with a division by zero. ADASYN is not suited for this specific dataset. Use SMOTE instead.
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\base.py", line 355, in _fit_resample
    nns = self.nn_k_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\base.py", line 355, in _fit_resample
    nns = self.nn_k_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 202, in _fit_resample
    nns = self.nn_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 202, in _fit_resample
    nns = self.nn_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\filter.py", line 218, in _fit_resample
    nns = self.nn_k_.kneighbors(
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\filter.py", line 218, in _fit_resample
    nns = self.nn_k_.kneighbors(
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 183, in _fit_resample
    raise RuntimeError(
RuntimeError: Not any neigbours belong to the majority class. This case will induce a NaN case with a division by zero. ADASYN is not suited for this specific dataset. Use SMOTE instead.
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 202, in _fit_resample
    nns = self.nn_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 202, in _fit_resample
    nns = self.nn_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\filter.py", line 218, in _fit_resample
    nns = self.nn_k_.kneighbors(
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 183, in _fit_resample
    raise RuntimeError(
RuntimeError: Not any neigbours belong to the majority class. This case will induce a NaN case with a division by zero. ADASYN is not suited for this specific dataset. Use SMOTE instead.
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 183, in _fit_resample
    raise RuntimeError(
RuntimeError: Not any neigbours belong to the majority class. This case will induce a NaN case with a division by zero. ADASYN is not suited for this specific dataset. Use SMOTE instead.
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\base.py", line 355, in _fit_resample
    nns = self.nn_k_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 183, in _fit_resample
    raise RuntimeError(
RuntimeError: Not any neigbours belong to the majority class. This case will induce a NaN case with a division by zero. ADASYN is not suited for this specific dataset. Use SMOTE instead.
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 202, in _fit_resample
    nns = self.nn_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 183, in _fit_resample
    raise RuntimeError(
RuntimeError: Not any neigbours belong to the majority class. This case will induce a NaN case with a division by zero. ADASYN is not suited for this specific dataset. Use SMOTE instead.
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\base.py", line 355, in _fit_resample
    nns = self.nn_k_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\filter.py", line 218, in _fit_resample
    nns = self.nn_k_.kneighbors(
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 183, in _fit_resample
    raise RuntimeError(
RuntimeError: Not any neigbours belong to the majority class. This case will induce a NaN case with a division by zero. ADASYN is not suited for this specific dataset. Use SMOTE instead.
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 183, in _fit_resample
    raise RuntimeError(
RuntimeError: Not any neigbours belong to the majority class. This case will induce a NaN case with a division by zero. ADASYN is not suited for this specific dataset. Use SMOTE instead.
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 183, in _fit_resample
    raise RuntimeError(
RuntimeError: Not any neigbours belong to the majority class. This case will induce a NaN case with a division by zero. ADASYN is not suited for this specific dataset. Use SMOTE instead.
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\base.py", line 355, in _fit_resample
    nns = self.nn_k_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 183, in _fit_resample
    raise RuntimeError(
RuntimeError: Not any neigbours belong to the majority class. This case will induce a NaN case with a division by zero. ADASYN is not suited for this specific dataset. Use SMOTE instead.
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 202, in _fit_resample
    nns = self.nn_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 183, in _fit_resample
    raise RuntimeError(
RuntimeError: Not any neigbours belong to the majority class. This case will induce a NaN case with a division by zero. ADASYN is not suited for this specific dataset. Use SMOTE instead.
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\base.py", line 355, in _fit_resample
    nns = self.nn_k_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\filter.py", line 218, in _fit_resample
    nns = self.nn_k_.kneighbors(
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\base.py", line 355, in _fit_resample
    nns = self.nn_k_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 202, in _fit_resample
    nns = self.nn_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\filter.py", line 218, in _fit_resample
    nns = self.nn_k_.kneighbors(
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\filter.py", line 218, in _fit_resample
    nns = self.nn_k_.kneighbors(
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 202, in _fit_resample
    nns = self.nn_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 202, in _fit_resample
    nns = self.nn_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 202, in _fit_resample
    nns = self.nn_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 183, in _fit_resample
    raise RuntimeError(
RuntimeError: Not any neigbours belong to the majority class. This case will induce a NaN case with a division by zero. ADASYN is not suited for this specific dataset. Use SMOTE instead.
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 202, in _fit_resample
    nns = self.nn_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 183, in _fit_resample
    raise RuntimeError(
RuntimeError: Not any neigbours belong to the majority class. This case will induce a NaN case with a division by zero. ADASYN is not suited for this specific dataset. Use SMOTE instead.
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\base.py", line 355, in _fit_resample
    nns = self.nn_k_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 202, in _fit_resample
    nns = self.nn_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\filter.py", line 218, in _fit_resample
    nns = self.nn_k_.kneighbors(
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 202, in _fit_resample
    nns = self.nn_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 202, in _fit_resample
    nns = self.nn_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 183, in _fit_resample
    raise RuntimeError(
RuntimeError: Not any neigbours belong to the majority class. This case will induce a NaN case with a division by zero. ADASYN is not suited for this specific dataset. Use SMOTE instead.
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\base.py", line 355, in _fit_resample
    nns = self.nn_k_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 183, in _fit_resample
    raise RuntimeError(
RuntimeError: Not any neigbours belong to the majority class. This case will induce a NaN case with a division by zero. ADASYN is not suited for this specific dataset. Use SMOTE instead.
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 183, in _fit_resample
    raise RuntimeError(
RuntimeError: Not any neigbours belong to the majority class. This case will induce a NaN case with a division by zero. ADASYN is not suited for this specific dataset. Use SMOTE instead.
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\base.py", line 355, in _fit_resample
    nns = self.nn_k_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\base.py", line 355, in _fit_resample
    nns = self.nn_k_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 202, in _fit_resample
    nns = self.nn_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 183, in _fit_resample
    raise RuntimeError(
RuntimeError: Not any neigbours belong to the majority class. This case will induce a NaN case with a division by zero. ADASYN is not suited for this specific dataset. Use SMOTE instead.
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\base.py", line 355, in _fit_resample
    nns = self.nn_k_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\filter.py", line 218, in _fit_resample
    nns = self.nn_k_.kneighbors(
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 202, in _fit_resample
    nns = self.nn_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\base.py", line 355, in _fit_resample
    nns = self.nn_k_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 183, in _fit_resample
    raise RuntimeError(
RuntimeError: Not any neigbours belong to the majority class. This case will induce a NaN case with a division by zero. ADASYN is not suited for this specific dataset. Use SMOTE instead.
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\filter.py", line 218, in _fit_resample
    nns = self.nn_k_.kneighbors(
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 202, in _fit_resample
    nns = self.nn_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 202, in _fit_resample
    nns = self.nn_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdCommon.py", line 63, in Process
    self.model.fit(X, y)
  File "C:\Miniconda3\lib\site-packages\xgboost\core.py", line 532, in inner_f
    return f(**kwargs)
  File "C:\Miniconda3\lib\site-packages\xgboost\sklearn.py", line 1400, in fit
    self._Booster = train(
  File "C:\Miniconda3\lib\site-packages\xgboost\core.py", line 532, in inner_f
    return f(**kwargs)
  File "C:\Miniconda3\lib\site-packages\xgboost\training.py", line 181, in train
    bst.update(dtrain, i, obj)
  File "C:\Miniconda3\lib\site-packages\xgboost\core.py", line 1733, in update
    _check_call(_LIB.XGBoosterUpdateOneIter(self.handle,
  File "C:\Miniconda3\lib\site-packages\xgboost\core.py", line 203, in _check_call
    raise XGBoostError(py_str(_LIB.XGBGetLastError()))
xgboost.core.XGBoostError: value 0 for Parameter num_class should be greater equal to 1
num_class: Number of output class in the multi-class classification.
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\filter.py", line 218, in _fit_resample
    nns = self.nn_k_.kneighbors(
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 202, in _fit_resample
    nns = self.nn_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\filter.py", line 218, in _fit_resample
    nns = self.nn_k_.kneighbors(
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\filter.py", line 218, in _fit_resample
    nns = self.nn_k_.kneighbors(
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 202, in _fit_resample
    nns = self.nn_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\filter.py", line 218, in _fit_resample
    nns = self.nn_k_.kneighbors(
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\filter.py", line 218, in _fit_resample
    nns = self.nn_k_.kneighbors(
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 202, in _fit_resample
    nns = self.nn_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\filter.py", line 218, in _fit_resample
    nns = self.nn_k_.kneighbors(
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 202, in _fit_resample
    nns = self.nn_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\filter.py", line 218, in _fit_resample
    nns = self.nn_k_.kneighbors(
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\filter.py", line 218, in _fit_resample
    nns = self.nn_k_.kneighbors(
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\filter.py", line 218, in _fit_resample
    nns = self.nn_k_.kneighbors(
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\filter.py", line 218, in _fit_resample
    nns = self.nn_k_.kneighbors(
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 183, in _fit_resample
    raise RuntimeError(
RuntimeError: Not any neigbours belong to the majority class. This case will induce a NaN case with a division by zero. ADASYN is not suited for this specific dataset. Use SMOTE instead.
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 183, in _fit_resample
    raise RuntimeError(
RuntimeError: Not any neigbours belong to the majority class. This case will induce a NaN case with a division by zero. ADASYN is not suited for this specific dataset. Use SMOTE instead.
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\filter.py", line 218, in _fit_resample
    nns = self.nn_k_.kneighbors(
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 202, in _fit_resample
    nns = self.nn_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\base.py", line 355, in _fit_resample
    nns = self.nn_k_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 183, in _fit_resample
    raise RuntimeError(
RuntimeError: Not any neigbours belong to the majority class. This case will induce a NaN case with a division by zero. ADASYN is not suited for this specific dataset. Use SMOTE instead.
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 183, in _fit_resample
    raise RuntimeError(
RuntimeError: Not any neigbours belong to the majority class. This case will induce a NaN case with a division by zero. ADASYN is not suited for this specific dataset. Use SMOTE instead.
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\base.py", line 355, in _fit_resample
    nns = self.nn_k_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 183, in _fit_resample
    raise RuntimeError(
RuntimeError: Not any neigbours belong to the majority class. This case will induce a NaN case with a division by zero. ADASYN is not suited for this specific dataset. Use SMOTE instead.
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\base.py", line 355, in _fit_resample
    nns = self.nn_k_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\base.py", line 355, in _fit_resample
    nns = self.nn_k_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\filter.py", line 218, in _fit_resample
    nns = self.nn_k_.kneighbors(
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\filter.py", line 218, in _fit_resample
    nns = self.nn_k_.kneighbors(
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\base.py", line 355, in _fit_resample
    nns = self.nn_k_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 202, in _fit_resample
    nns = self.nn_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 202, in _fit_resample
    nns = self.nn_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 202, in _fit_resample
    nns = self.nn_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 183, in _fit_resample
    raise RuntimeError(
RuntimeError: Not any neigbours belong to the majority class. This case will induce a NaN case with a division by zero. ADASYN is not suited for this specific dataset. Use SMOTE instead.
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\filter.py", line 218, in _fit_resample
    nns = self.nn_k_.kneighbors(
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 202, in _fit_resample
    nns = self.nn_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 183, in _fit_resample
    raise RuntimeError(
RuntimeError: Not any neigbours belong to the majority class. This case will induce a NaN case with a division by zero. ADASYN is not suited for this specific dataset. Use SMOTE instead.
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\base.py", line 355, in _fit_resample
    nns = self.nn_k_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\filter.py", line 218, in _fit_resample
    nns = self.nn_k_.kneighbors(
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 183, in _fit_resample
    raise RuntimeError(
RuntimeError: Not any neigbours belong to the majority class. This case will induce a NaN case with a division by zero. ADASYN is not suited for this specific dataset. Use SMOTE instead.
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\filter.py", line 218, in _fit_resample
    nns = self.nn_k_.kneighbors(
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 183, in _fit_resample
    raise RuntimeError(
RuntimeError: Not any neigbours belong to the majority class. This case will induce a NaN case with a division by zero. ADASYN is not suited for this specific dataset. Use SMOTE instead.
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 202, in _fit_resample
    nns = self.nn_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 202, in _fit_resample
    nns = self.nn_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 202, in _fit_resample
    nns = self.nn_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\base.py", line 355, in _fit_resample
    nns = self.nn_k_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 183, in _fit_resample
    raise RuntimeError(
RuntimeError: Not any neigbours belong to the majority class. This case will induce a NaN case with a division by zero. ADASYN is not suited for this specific dataset. Use SMOTE instead.
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\base.py", line 355, in _fit_resample
    nns = self.nn_k_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\base.py", line 355, in _fit_resample
    nns = self.nn_k_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 183, in _fit_resample
    raise RuntimeError(
RuntimeError: Not any neigbours belong to the majority class. This case will induce a NaN case with a division by zero. ADASYN is not suited for this specific dataset. Use SMOTE instead.
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 183, in _fit_resample
    raise RuntimeError(
RuntimeError: Not any neigbours belong to the majority class. This case will induce a NaN case with a division by zero. ADASYN is not suited for this specific dataset. Use SMOTE instead.
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 202, in _fit_resample
    nns = self.nn_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\filter.py", line 218, in _fit_resample
    nns = self.nn_k_.kneighbors(
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 183, in _fit_resample
    raise RuntimeError(
RuntimeError: Not any neigbours belong to the majority class. This case will induce a NaN case with a division by zero. ADASYN is not suited for this specific dataset. Use SMOTE instead.
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\base.py", line 355, in _fit_resample
    nns = self.nn_k_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\filter.py", line 218, in _fit_resample
    nns = self.nn_k_.kneighbors(
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\filter.py", line 218, in _fit_resample
    nns = self.nn_k_.kneighbors(
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 202, in _fit_resample
    nns = self.nn_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\base.py", line 355, in _fit_resample
    nns = self.nn_k_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\filter.py", line 218, in _fit_resample
    nns = self.nn_k_.kneighbors(
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 183, in _fit_resample
    raise RuntimeError(
RuntimeError: Not any neigbours belong to the majority class. This case will induce a NaN case with a division by zero. ADASYN is not suited for this specific dataset. Use SMOTE instead.
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\filter.py", line 218, in _fit_resample
    nns = self.nn_k_.kneighbors(
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\filter.py", line 218, in _fit_resample
    nns = self.nn_k_.kneighbors(
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 202, in _fit_resample
    nns = self.nn_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\filter.py", line 218, in _fit_resample
    nns = self.nn_k_.kneighbors(
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\filter.py", line 218, in _fit_resample
    nns = self.nn_k_.kneighbors(
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 202, in _fit_resample
    nns = self.nn_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 183, in _fit_resample
    raise RuntimeError(
RuntimeError: Not any neigbours belong to the majority class. This case will induce a NaN case with a division by zero. ADASYN is not suited for this specific dataset. Use SMOTE instead.
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\filter.py", line 218, in _fit_resample
    nns = self.nn_k_.kneighbors(
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\filter.py", line 218, in _fit_resample
    nns = self.nn_k_.kneighbors(
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\base.py", line 355, in _fit_resample
    nns = self.nn_k_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\base.py", line 355, in _fit_resample
    nns = self.nn_k_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\filter.py", line 218, in _fit_resample
    nns = self.nn_k_.kneighbors(
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\base.py", line 355, in _fit_resample
    nns = self.nn_k_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 183, in _fit_resample
    raise RuntimeError(
RuntimeError: Not any neigbours belong to the majority class. This case will induce a NaN case with a division by zero. ADASYN is not suited for this specific dataset. Use SMOTE instead.
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 183, in _fit_resample
    raise RuntimeError(
RuntimeError: Not any neigbours belong to the majority class. This case will induce a NaN case with a division by zero. ADASYN is not suited for this specific dataset. Use SMOTE instead.
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\base.py", line 355, in _fit_resample
    nns = self.nn_k_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\filter.py", line 218, in _fit_resample
    nns = self.nn_k_.kneighbors(
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 202, in _fit_resample
    nns = self.nn_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\base.py", line 355, in _fit_resample
    nns = self.nn_k_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\filter.py", line 218, in _fit_resample
    nns = self.nn_k_.kneighbors(
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\filter.py", line 218, in _fit_resample
    nns = self.nn_k_.kneighbors(
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\base.py", line 355, in _fit_resample
    nns = self.nn_k_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 183, in _fit_resample
    raise RuntimeError(
RuntimeError: Not any neigbours belong to the majority class. This case will induce a NaN case with a division by zero. ADASYN is not suited for this specific dataset. Use SMOTE instead.
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 202, in _fit_resample
    nns = self.nn_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 183, in _fit_resample
    raise RuntimeError(
RuntimeError: Not any neigbours belong to the majority class. This case will induce a NaN case with a division by zero. ADASYN is not suited for this specific dataset. Use SMOTE instead.
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\base.py", line 355, in _fit_resample
    nns = self.nn_k_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 183, in _fit_resample
    raise RuntimeError(
RuntimeError: Not any neigbours belong to the majority class. This case will induce a NaN case with a division by zero. ADASYN is not suited for this specific dataset. Use SMOTE instead.
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\filter.py", line 218, in _fit_resample
    nns = self.nn_k_.kneighbors(
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\base.py", line 355, in _fit_resample
    nns = self.nn_k_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\base.py", line 355, in _fit_resample
    nns = self.nn_k_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 202, in _fit_resample
    nns = self.nn_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 202, in _fit_resample
    nns = self.nn_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 183, in _fit_resample
    raise RuntimeError(
RuntimeError: Not any neigbours belong to the majority class. This case will induce a NaN case with a division by zero. ADASYN is not suited for this specific dataset. Use SMOTE instead.
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 202, in _fit_resample
    nns = self.nn_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 202, in _fit_resample
    nns = self.nn_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\filter.py", line 218, in _fit_resample
    nns = self.nn_k_.kneighbors(
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 183, in _fit_resample
    raise RuntimeError(
RuntimeError: Not any neigbours belong to the majority class. This case will induce a NaN case with a division by zero. ADASYN is not suited for this specific dataset. Use SMOTE instead.
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\base.py", line 355, in _fit_resample
    nns = self.nn_k_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\base.py", line 355, in _fit_resample
    nns = self.nn_k_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\base.py", line 355, in _fit_resample
    nns = self.nn_k_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\base.py", line 355, in _fit_resample
    nns = self.nn_k_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 202, in _fit_resample
    nns = self.nn_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 183, in _fit_resample
    raise RuntimeError(
RuntimeError: Not any neigbours belong to the majority class. This case will induce a NaN case with a division by zero. ADASYN is not suited for this specific dataset. Use SMOTE instead.
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\filter.py", line 218, in _fit_resample
    nns = self.nn_k_.kneighbors(
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\filter.py", line 218, in _fit_resample
    nns = self.nn_k_.kneighbors(
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 202, in _fit_resample
    nns = self.nn_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\base.py", line 355, in _fit_resample
    nns = self.nn_k_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdCommon.py", line 63, in Process
    self.model.fit(X, y)
  File "C:\Miniconda3\lib\site-packages\xgboost\core.py", line 532, in inner_f
    return f(**kwargs)
  File "C:\Miniconda3\lib\site-packages\xgboost\sklearn.py", line 1400, in fit
    self._Booster = train(
  File "C:\Miniconda3\lib\site-packages\xgboost\core.py", line 532, in inner_f
    return f(**kwargs)
  File "C:\Miniconda3\lib\site-packages\xgboost\training.py", line 181, in train
    bst.update(dtrain, i, obj)
  File "C:\Miniconda3\lib\site-packages\xgboost\core.py", line 1733, in update
    _check_call(_LIB.XGBoosterUpdateOneIter(self.handle,
  File "C:\Miniconda3\lib\site-packages\xgboost\core.py", line 203, in _check_call
    raise XGBoostError(py_str(_LIB.XGBGetLastError()))
xgboost.core.XGBoostError: value 0 for Parameter num_class should be greater equal to 1
num_class: Number of output class in the multi-class classification.
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\base.py", line 355, in _fit_resample
    nns = self.nn_k_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\filter.py", line 218, in _fit_resample
    nns = self.nn_k_.kneighbors(
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 183, in _fit_resample
    raise RuntimeError(
RuntimeError: Not any neigbours belong to the majority class. This case will induce a NaN case with a division by zero. ADASYN is not suited for this specific dataset. Use SMOTE instead.
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\base.py", line 355, in _fit_resample
    nns = self.nn_k_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 183, in _fit_resample
    raise RuntimeError(
RuntimeError: Not any neigbours belong to the majority class. This case will induce a NaN case with a division by zero. ADASYN is not suited for this specific dataset. Use SMOTE instead.
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 183, in _fit_resample
    raise RuntimeError(
RuntimeError: Not any neigbours belong to the majority class. This case will induce a NaN case with a division by zero. ADASYN is not suited for this specific dataset. Use SMOTE instead.
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 183, in _fit_resample
    raise RuntimeError(
RuntimeError: Not any neigbours belong to the majority class. This case will induce a NaN case with a division by zero. ADASYN is not suited for this specific dataset. Use SMOTE instead.
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\filter.py", line 218, in _fit_resample
    nns = self.nn_k_.kneighbors(
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 202, in _fit_resample
    nns = self.nn_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 202, in _fit_resample
    nns = self.nn_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\base.py", line 355, in _fit_resample
    nns = self.nn_k_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\filter.py", line 218, in _fit_resample
    nns = self.nn_k_.kneighbors(
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 202, in _fit_resample
    nns = self.nn_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 202, in _fit_resample
    nns = self.nn_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 202, in _fit_resample
    nns = self.nn_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 202, in _fit_resample
    nns = self.nn_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\filter.py", line 218, in _fit_resample
    nns = self.nn_k_.kneighbors(
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\base.py", line 355, in _fit_resample
    nns = self.nn_k_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 183, in _fit_resample
    raise RuntimeError(
RuntimeError: Not any neigbours belong to the majority class. This case will induce a NaN case with a division by zero. ADASYN is not suited for this specific dataset. Use SMOTE instead.
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 202, in _fit_resample
    nns = self.nn_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 202, in _fit_resample
    nns = self.nn_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\filter.py", line 218, in _fit_resample
    nns = self.nn_k_.kneighbors(
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\base.py", line 355, in _fit_resample
    nns = self.nn_k_.kneighbors(X_class, return_distance=False)[:, 1:]
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\filter.py", line 218, in _fit_resample
    nns = self.nn_k_.kneighbors(
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 2, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\filter.py", line 218, in _fit_resample
    nns = self.nn_k_.kneighbors(
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_smote\filter.py", line 218, in _fit_resample
    nns = self.nn_k_.kneighbors(
  File "C:\Miniconda3\lib\site-packages\sklearn\neighbors\_base.py", line 810, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 6
Traceback (most recent call last):
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 135, in _pipeline
    X = adapter.Execute(X, i+1, s+1, self.muted)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\pipeline.py", line 90, in Execute
    X = self.Process(X)
  File "D:\Dropbox\work-Proj\Proj-UV-GNR-ML\code\pipeline\AdAugment.py", line 23, in Process
    Xs, ys = self.overSampler.fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 203, in fit_resample
    return super().fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\base.py", line 88, in fit_resample
    output = self._fit_resample(X, y)
  File "C:\Miniconda3\lib\site-packages\imblearn\over_sampling\_adasyn.py", line 183, in _fit_resample
    raise RuntimeError(
RuntimeError: Not any neigbours belong to the majority class. This case will induce a NaN case with a division by zero. ADASYN is not suited for this specific dataset. Use SMOTE instead.
